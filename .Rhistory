geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_jitter(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160)) +
xlim(0, 200) +
ylim(0, 0.025)
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests)) +
geom_smooth()
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests)) +
geom_smooth()+
xlim(0, 200) +
ylim(0, 0.025)
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests)) +
geom_smooth()+
xlim(0, 200) +
ylim(0, 0.025)
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests)) +
geom_smooth()
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests/40129160)) +
geom_smooth()
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests/40129160)) +
geom_smooth()+
xlim(0, 200) +
ylim(0, 0.025)
out_long_wide %>%
ggplot(aes(x = time, y = cumulative_positive_tests/40129160)) +
geom_jitter()+
geom_smooth()+
xlim(0, 200) +
ylim(0, 0.025)
knitr::opts_chunk$set(echo = TRUE)
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=1,beta=3)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
lambda=beta*(I/N)
dS=-lambda*S
dI=lambda*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(lubridate)
library(deSolve)
library(reshape2)
library(tidyr)
alameda <- read.csv("covid19cases_test.csv")
CA_sub <- alameda %>%
filter(area == 'California') %>%
mutate(date = ymd(date),
# date = decimal_date(date),
sus = population - cumulative_positive_tests,
recov = lag(cumulative_cases,14)-cumulative_reported_deaths)
CA_sub %>%
ggplot(aes(x = date)) +
geom_line(aes(y = sus), color = 'blue')+
geom_line(aes(y = cumulative_cases), color = 'red')+
geom_line(aes(y = recov), color = 'green')
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=1,beta=3)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
lambda=beta*(I/N)
dS=-lambda*S
dI=lambda*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
out_long=melt(output,id="time")
# To plot the proportion of susceptible, infected and recovered individuals over time
ggplot(data = out_long,
aes(x = time, y = value/40129160, colour = variable, group = variable)) +
geom_line() +xlab("Time (days)")+ylab("Proportion of the population")+scale_color_discrete(name="State")
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=0.2,beta=0.5)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
lambda=beta*(I/N)
dS=-lambda*S
dI=lambda*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
out_long=melt(output,id="time")
# To plot the proportion of susceptible, infected and recovered individuals over time
ggplot(data = out_long,
aes(x = time, y = value/40129160, colour = variable, group = variable)) +
geom_line() +xlab("Time (days)")+ylab("Proportion of the population")+scale_color_discrete(name="State")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_jitter(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=0.2,beta=0.25)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
lambda=beta*(I/N)
dS=-lambda*S
dI=lambda*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
out_long=melt(output,id="time")
# To plot the proportion of susceptible, infected and recovered individuals over time
ggplot(data = out_long,
aes(x = time, y = value/40129160, colour = variable, group = variable)) +
geom_line() +xlab("Time (days)")+ylab("Proportion of the population")+scale_color_discrete(name="State")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_jitter(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_jitter(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160)) +
xlim(0, 200) +
ylim(0, 0.025)
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_line(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
CA_sub <- alameda %>%
filter(area == 'California') %>%
mutate(date = ymd(date),
# date = decimal_date(date),
sus = population - cumulative_positive_tests,
recov = lag(cumulative_cases,14)-cumulative_reported_deaths) %>%
select(c(data, sus, recov, cumulative_cases, cumulative_positive_tests))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(lubridate)
library(deSolve)
library(reshape2)
library(tidyr)
alameda <- read.csv("covid19cases_test.csv")
CA_sub <- alameda %>%
filter(area == 'California') %>%
mutate(date = ymd(date),
# date = decimal_date(date),
sus = population - cumulative_positive_tests,
recov = lag(cumulative_cases,14)-cumulative_reported_deaths) %>%
select(c(date, sus, recov, cumulative_cases, cumulative_positive_tests))
CA_sub %>%
ggplot(aes(x = date)) +
geom_line(aes(y = sus), color = 'blue')+
geom_line(aes(y = cumulative_cases), color = 'red')+
geom_line(aes(y = recov), color = 'green')
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=0.2,beta=0.25)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
lambda=beta*(I/N)
dS=-lambda*S
dI=lambda*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
out_long=melt(output,id="time")
# To plot the proportion of susceptible, infected and recovered individuals over time
ggplot(data = out_long,
aes(x = time, y = value/40129160, colour = variable, group = variable)) +
geom_line() +xlab("Time (days)")+ylab("Proportion of the population")+scale_color_discrete(name="State")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_line(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_jitter(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160)) +
xlim(0, 200) +
ylim(0, 0.025)
CA_sub <- alameda %>%
filter(area == 'California') %>%
mutate(date = ymd(date),
# date = decimal_date(date),
sus = population - cumulative_positive_tests,
recov = lag(cumulative_cases,14)-cumulative_reported_deaths) %>%
select(c(date, sus, cumulative_positive_tests))
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160)) +
xlim(0, 200) +
ylim(0, 0.025)
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=0.2,beta=0.25)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
dS=-beta*(I/N)*S
dI=beta*(I/N)*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
out_long=melt(output,id="time")
# To plot the proportion of susceptible, infected and recovered individuals over time
ggplot(data = out_long,
aes(x = time, y = value/40129160, colour = variable, group = variable)) +
geom_line() +xlab("Time (days)")+ylab("Proportion of the population")+scale_color_discrete(name="State")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1)
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1) +
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160), color = "red") +
geom_line(aes(y = S/40129160)) +
xlim(1,200)+
ylim(0.98, 1) +
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160), color = "red") +
geom_line(aes(y = S/40129160), color = "blue") +
xlim(1,200)+
ylim(0.98, 1) +
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160), color = "green") +
geom_line(aes(y = I/40129160), color = "blue") +
xlim(0, 200) +
ylim(0, 0.025)+
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160), color = "blue") +
xlim(0, 200) +
ylim(0, 0.025)+
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160), color = "blue") +
xlim(0, 200) +
ylim(0, 0.025)+
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals",
color = "Legend")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160), color = "blue") +
xlim(1,200)+
ylim(0.98, 1) +
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
library(ggplot2)
library(dplyr)
library(lubridate)
library(deSolve)
library(reshape2)
library(tidyr)
alameda <- read.csv("covid19cases_test.csv")
CA_sub <- alameda %>%
filter(area == 'California') %>%
mutate(date = ymd(date),
# date = decimal_date(date),
sus = population - cumulative_positive_tests,
recov = lag(cumulative_cases,14)-cumulative_reported_deaths) %>%
select(c(date, sus, cumulative_positive_tests))
CA_sub %>%
ggplot(aes(x = date)) +
geom_line(aes(y = sus), color = 'blue')+
geom_line(aes(y = cumulative_cases), color = 'red')+
geom_line(aes(y = recov), color = 'green')
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160), color = "blue") +
xlim(0, 200) +
ylim(0, 0.025)+
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the Infected individuals",
color = "Legend")
library(ggplot2)
library(dplyr)
library(lubridate)
library(deSolve)
library(reshape2)
library(tidyr)
alameda <- read.csv("covid19cases_test.csv")
CA_sub <- alameda %>%
filter(area == 'California') %>%
mutate(date = ymd(date),
# date = decimal_date(date),
sus = population - cumulative_positive_tests,
recov = lag(cumulative_cases,14)-cumulative_reported_deaths) %>%
select(c(date, sus, cumulative_positive_tests))
CA_sub %>%
ggplot(aes(x = date)) +
geom_line(aes(y = sus), color = 'blue')+
geom_line(aes(y = cumulative_cases), color = 'red')+
geom_line(aes(y = recov), color = 'green')
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160), color = "blue") +
xlim(0, 200) +
ylim(0, 0.025)+
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the Infected individuals",
color = "Legend")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
# Model inputs
initial_state_values=c(S=40129136,I=24,R=0)
parameters=c(gamma=0.2,beta=0.25)
# Time points
time=seq(from=1,to=809,by=1)
# SIR model function
sir_model <- function(time,state,parameters){
with(as.list(c(state,parameters)),{
N=S+I+R
dS=-beta*(I/N)*S
dI=beta*(I/N)*S-gamma*I
dR=gamma*I
return(list(c(dS,dI,dR)))
}
)
}
#Solving the differential equations
output<-as.data.frame(ode(y=initial_state_values,func = sir_model,parms=parameters,times = time))
out_long=melt(output,id="time")
# To plot the proportion of susceptible, infected and recovered individuals over time
ggplot(data = out_long,
aes(x = time, y = value/40129160, colour = variable, group = variable)) +
geom_line() +xlab("Time (days)")+ylab("Proportion of the population")+scale_color_discrete(name="State")
out_long_wide <- out_long %>%
pivot_wider(names_from = variable,
values_from = value) %>%
cbind(CA_sub)
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = sus/40129160)) +
geom_line(aes(y = S/40129160), color = "blue") +
xlim(1,200)+
ylim(0.98, 1) +
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the susceptible individuals")
out_long_wide %>%
ggplot(aes(x = time)) +
geom_point(aes(y = cumulative_positive_tests/40129160)) +
geom_line(aes(y = I/40129160), color = "blue") +
xlim(0, 200) +
ylim(0, 0.025)+
theme_classic() +
labs(x = "Number of days since 2020-02-01",
y = "Portion of the Infected individuals",
color = "Legend")
require(dplyr)
require(tidyverse)
require(ggplot2)
require(tidycensus)
require(geosphere)
require(lubridate)
require(geeM)
census_api_key("KEY GOES HERE")
bike_2021 <- read_csv("bike_2021.csv")
clean_bike <- read_csv("final_bike.csv")
clean_bike <- clean_bike %>%
select(c(start_date, start_station_id, dist, duration))
daily_bike <- clean_bike %>%
group_by(start_station_id, start_date) %>%
summarize(rider_number = n(), avg_duration = mean(duration), avg_dist = mean(dist))
